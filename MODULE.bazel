bazel_dep(name = "bazel_skylib", version = "1.8.1")

# Note: This needs to be beofre rules_cc in order to correctly configure the C++ toolchain.
bazel_dep(name = "apple_support", version = "1.22.1")
bazel_dep(name = "rules_cc", version = "0.1.2")

bazel_dep(name = "rules_swift", version = "3.1.1")
bazel_dep(name = "rules_xcodeproj", version = "3.1.2")
bazel_dep(name = "platforms", version = "1.0.0")

bazel_dep(name = "rules_apple", version = "4.1.1")
# Fix for running tests on iOS devices with Xcode 16.3+
git_override(
    module_name = "rules_apple",
    commit = "3c9404c484e70c10df81be6c20590ce2031b81b1",
    remote = "https://github.com/DoDoENT/rules_apple.git",
)

# ANDROID

bazel_dep(name = "rules_android_ndk", version = "0.1.3")

git_override(
    module_name = "rules_android_ndk",
    remote = "https://github.com/DoDoENT/rules_android_ndk.git",
    commit = "82b934b0ca9c545db700debd7744f73845a9a478",
)

android_ndk_repository_extension = use_extension("@rules_android_ndk//:extension.bzl", "android_ndk_repository_extension")
android_ndk_repository_extension.configure(
    version = "r28c",
    api_level = 21,
)
use_repo(android_ndk_repository_extension, "androidndk")


bazel_dep(name = "rules_android")

git_override(
    module_name = "rules_android",
    remote = "https://github.com/bazelbuild/rules_android.git",
    commit = "675d3720ce85141d93f445db7f88a9e2e0c62f82"
)

android_sdk_repository_extension = use_extension("@rules_android//rules/android_sdk_repository:rule.bzl", "android_sdk_repository_extension")
use_repo(android_sdk_repository_extension, "androidsdk")

register_toolchains(
    "@androidndk//:all",
    "@androidsdk//:all",
)

bazel_dep(name = "rules_jvm_external", version = "6.8")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        'junit:junit:4.13.2',
        'androidx.test:rules:1.6.1',
        'androidx.test.ext:junit:1.2.1',
    ],
    repositories = [
        "https://maven.google.com",
        "https://repo1.maven.org/maven2",
    ],
)
use_repo(maven, "maven")

# EMSCRIPTEN
bazel_dep(name = "emsdk")
git_override(
    module_name = "emsdk",
    remote = "https://github.com/emscripten-core/emsdk.git",
    strip_prefix = "bazel",
    commit = "f39e849effe1bd679aa9ef3cd1798d327c9619db",
)

emscripten_deps = use_extension("@emsdk//:emscripten_deps.bzl", "emscripten_deps")
emscripten_deps.config(
    version = "4.0.12",
)

emscripten_cache = use_extension(
    "@emsdk//:emscripten_cache.bzl",
    "emscripten_cache",
)
emscripten_cache.configuration(flags = ["--lto=thin"])
emscripten_cache.targets(targets = [
    "crtbegin",
    "libal",
    "libc-mt",
    "libc-mt-debug",
    "libc",
    "libc++-mt-noexcept",
    "libc++-noexcept",
    "libc++-debug-mt-noexcept",
    "libc++abi-mt-noexcept",
    "libc++abi-debug-mt-noexcept",
    "libc++abi-debug-noexcept",
    "libcompiler_rt-mt",
    "libcompiler_rt",
    "libembind-rtti",
    "libemmalloc-mt",
    "libemmalloc-mt-debug",
    "libemmalloc",
    "libfetch-mt",
    "libfetch",
    "libGL-getprocaddr",
    "libGL-mt-getprocaddr",
    "libhtml5",
    "libnoexit",
    "libsockets-mt",
    "libsockets",
    "libprintf_long_double-mt",
    "libprintf_long_double-mt-debug",
    "libprintf_long_double-debug",
    "libstubs",
    "libstubs-debug",
    "libc-debug",
    "libdlmalloc",
    "libc++abi-debug-noexcept",
])

bazel_dep(name = "aspect_rules_js", version = "2.4.2")
bazel_dep(name = "rules_nodejs", version = "6.5.0")
git_override(
    module_name = "rules_nodejs",
    remote = "https://github.com/bazel-contrib/rules_nodejs.git",
    commit = "356c5ff7e8804164bf9d13c3e9536579704b3b0f",
)

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node", dev_dependency = True)
node.toolchain(node_version = "22.18.0")


# CLANGD COMPILE COMMANDS

# refresh with bazel run @hedron_compile_commands//:refresh_all
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)

# https://github.com/hedronvision/bazel-compile-commands-extractor/pull/219#issuecomment-2607795958
git_override(
    module_name = "hedron_compile_commands",
    remote = "https://github.com/mikael-s-persson/bazel-compile-commands-extractor",
    commit = "f5fbd4cee671d8d908f37c83abaf70fba5928fc7"
)
# git_override(
#     module_name = "hedron_compile_commands",
#     remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
#     branch = "main",
#     # Replace the commit hash (above) with the latest (https://github.com/hedronvision/bazel-compile-commands-extractor/commits/main).
#     # Even better, set up Renovate and let it do the work for you (see "Suggestion: Updates" in the README).
# )

# DEPENDENCIES

bazel_dep(name = "googletest", version = "1.17.0", dev_dependency = True,)
# bazel_dep(name = "opencv", version = "4.11.0.bcr.1")
